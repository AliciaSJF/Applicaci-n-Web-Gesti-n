plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id "io.freefair.lombok" version "8.4"
}

group = 'da2.dva'
version = ''

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    //Springboot
    implementation 'org.springframework.boot:spring-boot-starter'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // WEB
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //Thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    //Lombok
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    //JPA y MySQL
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    //testImplementation 'io.rest-assured:rest-assured'
    //testImplementation 'org.hamcrest:hamcrest'
    //testImplementation 'org.junit.jupiter:junit-jupiter'
    //testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    //Validaciones
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    //Librer√≠a StringUtils
    implementation 'org.apache.commons:commons-lang3:3.12.0'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}
